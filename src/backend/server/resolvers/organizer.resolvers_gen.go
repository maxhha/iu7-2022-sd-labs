// This file was generated by codegen/graphql_resolvers. DO NOT EDIT.
package resolvers

import (
	"context"
	"iu7-2022-sd-labs/buisness/ports/repositories"
	"iu7-2022-sd-labs/server/models"
)

func (r *queryResolver) generatedPagination__Organizers(ctx context.Context, first *int, after *string, filter *models.OrganizerFilter) (*models.OrganizerConnection, error) {
	ents, err := r.organizerInteractor.Find(&repositories.OrganizerFindParams{
		Filter: filter.Into(&repositories.OrganizerFilter{}),
		Order: &repositories.OrganizerOrder{
			By:   repositories.OrganizerOrderFieldCreationDate,
			Desc: true,
		},
		Slice: models.FillForwardSlice(first, after, &repositories.ForwardSlice{}),
	})
	if err != nil {
		return nil, Wrap(err, "organizer interactor find")
	}

	if len(ents) == 0 {
		return &models.OrganizerConnection{PageInfo: &models.PageInfo{}}, nil
	}

	objs := models.OrganizerEdgesArrayFromEntites(ents)

	hasNextPage := false
	if first != nil {
		hasNextPage = len(objs) > *first
		objs = objs[:len(objs)-1]
	}

	return &models.OrganizerConnection{
		PageInfo: &models.PageInfo{
			HasNextPage: hasNextPage,
			StartCursor: &objs[0].Cursor,
			EndCursor:   &objs[len(objs)-1].Cursor,
		},
		Edges: objs,
	}, nil
}
