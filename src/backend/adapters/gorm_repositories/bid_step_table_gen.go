// This file was generated by codegen/gorm_repository. DO NOT EDIT.
package gorm_repositories

import (
	"iu7-2022-sd-labs/buisness/ports/repositories"

	"fmt"
	"gorm.io/gorm"
	"gorm.io/gorm/clause"
)

type BidStepTableRepository struct{ db *gorm.DB }

func (r *GORMRepository) BidStepTable() repositories.BidStepTableRepository {
	return &BidStepTableRepository{r.db}
}

func (r *BidStepTableRepository) orderQuery(query *gorm.DB, order *repositories.BidStepTableOrder) (*gorm.DB, error) {
	if order == nil {
		return query, nil
	}

	column, exists := bidStepTableFieldToColumn[order.By]
	if !exists {
		return nil, fmt.Errorf("column for field \"%s\" is unknown", order.By)
	}

	query = query.Order(clause.OrderByColumn{
		Column: clause.Column{Name: column},
		Desc:   order.Desc,
	})

	return query, nil
}

func (r *BidStepTableRepository) sliceQuery(query *gorm.DB, order *repositories.BidStepTableOrder, slice *repositories.ForwardSlice) (*gorm.DB, error) {
	if slice == nil {
		return query, nil
	}

	column, exists := bidStepTableFieldToColumn[order.By]
	if !exists {
		return nil, fmt.Errorf("column for field \"%s\" is unknown", order.By)
	}

	var err error
	query, err = sliceQuery(query, column, order.Desc, slice)
	return query, Wrap(err, "sliceQuery")
}
