# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - server/schema/**/*.graphqls

# Where should the generated server code go?
exec:
  filename: server/generated/generated.go
  package: generated

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: server/models/models_gen.go
  package: models

# Where should the resolver implementations go?
resolver:
  layout: follow-schema
  dir: server/resolvers
  package: resolvers

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
omit_slice_element_pointers: true

# Optional: set to speed up generation time by not performing a final validation pass.
skip_validation: true

# Optional: set to skip running `go mod tidy` when generating server code
skip_mod_tidy: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - iu7-2022-sd-labs/server/models

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  # DateTime:
  #   model:
  #     - auction-back/models.Time
  #     - auction-back/models.NullTime
  # Float:
  #   model:
  #     - auction-back/models.Decimal
  # Cursor:
  #   model:
  #     - github.com/99designs/gqlgen/graphql.String
