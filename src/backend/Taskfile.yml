version: "3"

tasks:
  default: task --list-all

  install:tools:
    desc: Installs backend tools
    cmds:
      - cat tools.go | grep _ | awk -F'"' '{print $2}' | xargs -tI % go install %

  gen:mocks:
    desc: Generated mocks in backend
    cmds:
      - go generate -run="go run github.com/vektra/mockery/v2" ./...
    sources:
      - buisness/ports/**/*.go

  gen:gorm:
    desc: Generates gorm repositories
    cmds:
      - go generate -run "/codegen/gorm_repository/main.go" ./...
    sources:
      - adapters/gorm_repositories/*.go
      - codegen/gorm_repository/*
    generates:
      - adapters/gorm_repositories/*_gen.go

  gen:gqlresolvers:
    desc: Generates gorm repositories
    cmds:
      - go generate -run "/codegen/graphql_resolvers/main.go" ./...
    sources:
      - server/resolvers/generated.go
      - codegen/graphql_resolvers/*
    generates:
      - server/resolvers/*.resolvers_gen.go

  gen:dataloader:
    desc: Generates dataloader
    vars:
      SCRIPT: codegen/dataloader/main.go
      OUT: ./adapters/dataloader/dataloader_gen.go
      ENTITIES: Auction,BidStepTable,Consumer,Offer,Organizer,Product,Room
    cmds:
      - go run {{.SCRIPT}} --out {{.OUT}} --entities {{.ENTITIES}}
    sources:
      - "{{.SCRIPT}}"
    generates:
      - "{{.OUT}}"

  gen:gql:
    desc: Generates GraphQL resolvers and models
    vars:
      CONFIG: config/gqlgen.yml
    cmds:
      - time go run github.com/99designs/gqlgen generate --config {{.CONFIG}}
      - task: gen:gqlresolvers
    sources:
      - "{{.CONFIG}}"
      - server/models/*.go
      - server/resolvers/**/*.resolvers.go
      - server/schema/**/*.graphqls
    generates:
      - server/models/models_gen.go
      - server/resolvers/**/*.resolvers.go
      - server/generated/generated.go

  create:dev-network:
    desc: Creates dev network
    cmds:
      - docker network create iu7-2022-sd-labs_backend-dev
    status:
      - test "$(docker network inspect iu7-2022-sd-labs_backend-dev)" != "[]"

  restart:migration:
    desc: Restarts migration container
    cmds:
      - cmd: docker restart iu7-2022-sd-labs-migration-{{.ENV}}-1
        ignore_error: "{{.IGNORE_ERROR | default false}}"
    sources:
      - migrations/*

  dev:
    desc: Run server in development mode
    deps:
      - gen:mocks
      - gen:gorm
      - create:dev-network
      - task: restart:migration
        vars:
          ENV: dev
          IGNORE_ERROR: true
      - gen:dataloader
    env:
      CONFIG_FILE: config/server-dev.yml
    vars:
      DOCKERCOMPOSE: config/docker-compose.dev.yml

    cmds:
      - docker-compose -f {{.DOCKERCOMPOSE}} up -d
      - defer: docker-compose -f {{.DOCKERCOMPOSE}} stop
      - sleep 1
      - air -c config/air.toml

  test:
    desc: Run test with colorful output
    deps:
      - gen:mocks
    cmds:
      - grc -c config/grc-test.conf go test {{.CLI_ARGS}}

  dir:out:
    desc: Creates out directiory for backend
    cmds:
      - mkdir -p out
    status:
      - test -d out

  filter-cover:
    desc: Filters generated files from coverage output
    cmds:
      - cat {{.IN}} | grep -v "_gen.go\|_suite.go\|generated.go\|.pb.go" > {{.OUT}}

  test:unit:
    desc: Run unit tests for backend
    deps:
      - dir:out
      - gen:mocks
    vars:
      TMPOUT: ./out/unit-coverage.tmp.out
      OUT: ./out/unit-coverage.out
      HTML: ./out/unit-coverage.html
    cmds:
      - go test -coverprofile={{.TMPOUT}} ./...
      - task: filter-cover
        vars:
          IN: "{{.TMPOUT}}"
          OUT: "{{.OUT}}"
      - go tool cover -html={{.OUT}} -o {{.HTML}}
      - go tool cover -func={{.OUT}}
